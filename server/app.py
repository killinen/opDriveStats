from fastapi import FastAPI, HTTPException
from fastapi.middleware.cors import CORSMiddleware

from .data import repository

app = FastAPI(
    title='Engagement Gauge API',
    description='Serve engagement statistics generated by engagement_gauge_dev.py',
    version='0.1.0',
)

app.add_middleware(
    CORSMiddleware,
    allow_origins=['*'],
    allow_methods=['*'],
    allow_headers=['*'],
)


@app.get('/health', summary='Health check')
def health() -> dict:
    return {'status': 'ok', 'last_loaded': repository.last_updated()}


@app.get('/devices', summary='List devices with engagement summaries')
def list_devices() -> dict:
    summaries = repository.device_summaries()
    return {
        'devices': summaries,
        'count': len(summaries),
        'last_loaded': repository.last_updated(),
        'data_source': str(repository.db_path),
    }


@app.get('/devices/{device_id}', summary='Detailed metrics for a specific device')
def device_details(device_id: str) -> dict:
    drives = repository.drives_for_device(device_id)
    if not drives:
        raise HTTPException(status_code=404, detail=f'Device {device_id} not found')

    summary = repository.device_summary(device_id)
    return {
        'device': summary,
        'drives': repository.format_drive_details(drives),
        'last_loaded': repository.last_updated(),
    }
